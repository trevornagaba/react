{"version":3,"sources":["App.js","index.js"],"names":["mapStyles","width","height","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","markerClicked","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onMouseoverMarker","onMouseoutMarker","onClose","inherits","createClass","key","value","axios","get","then","response","driver_list","data","n","renderAmbulance","catch","error","console","log","driver","location","split","phone_number","react_default","a","createElement","dist","onMouseover","onClick","onMouseout","name","position","lat","lng","visible","google","zoom","style","initialCenter","getDrivers","Component","GoogleApiWrapper","apiKey","ReactDOM","render","App","document","getElementById"],"mappings":"wOAIMA,EAAY,CACdC,MAAO,OACPC,OAAQ,QAKCC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,MAAQ,CACJC,eAAe,EACfC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,IALvBnB,EAQIoB,cAAgB,SAACC,EAAOC,EAAQC,GAC5BvB,EAAKwB,SAAS,CACVR,eAAe,KAV3BhB,EAcIyB,kBAAoB,SAACJ,EAAOC,EAAQC,GAC3BvB,EAAKe,MAAME,mBACZjB,EAAKwB,SAAS,CACVL,cAAeE,EACfH,aAAcI,EACdL,mBAAmB,KAnBnCjB,EAwBI0B,iBAAmB,SAAAL,GACVrB,EAAKe,MAAMC,eACRhB,EAAKe,MAAME,mBACXjB,EAAKwB,SAAS,CACVP,mBAAmB,EACnBC,aAAc,QA7BlClB,EAmCI2B,QAAU,SAAAN,GACFrB,EAAKe,MAAME,mBACXjB,EAAKwB,SAAS,CACVR,eAAe,EACfC,mBAAmB,EACnBC,aAAc,QAxC9BlB,EAAA,OAAAC,OAAA2B,EAAA,EAAA3B,CAAAJ,EAAAC,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAA,EAAAiC,IAAA,aAAAC,MAAA,WA+CQC,IAAMC,IAAI,6CACLC,KAAK,SAAUC,GAEZ,IAAIC,EACJA,EAAcD,EAASE,KAAT,QACd,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAY9B,OAAQgC,IACpCnC,KAAKoC,gBAAgBH,EAAYE,MAGxCE,MAAM,SAAUC,GAEbC,QAAQC,IAAIF,KAEfP,KAAK,gBA5DlB,CAAAJ,IAAA,kBAAAC,MAAA,SAiEoBa,GACZ,IAAIC,EAAWD,EAAM,SAAaE,MAAM,KACpCC,EAAeH,EAAM,aACzB,OACII,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACIC,YAAajD,KAAKsB,kBAClB4B,QAASlD,KAAKiB,cACdkC,WAAYnD,KAAKuB,iBACjB6B,KAAMR,EAINS,SAAU,CAAEC,IAAKZ,EAAS,GAAIa,IAAKb,EAAS,MAEhDG,EAAAC,EAAAC,cAACC,EAAA,WAAD,CACI7B,OAAQnB,KAAKY,MAAMG,aACnByC,QAASxD,KAAKY,MAAME,kBACpBU,QAASxB,KAAKwB,SAEdqB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAK/C,KAAKY,MAAMI,cAAcoC,WAtFtD,CAAAzB,IAAA,oBAAAC,MAAA,eAAAD,IAAA,SAAAC,MAAA,WAmGQ,OACIiB,EAAAC,EAAAC,cAACC,EAAA,IAAD,CACIS,OAAQzD,KAAKkB,MAAMuC,OACnBC,KAAM,GACNC,MAAOpE,EACPqE,cAAe,CACXN,IAAK,QACLC,IAAK,WAGTV,EAAAC,EAAAC,cAAA,WACK/C,KAAK6D,mBA9G1BnE,EAAA,CAAkCoE,aAqHnBC,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEZrE,GC9HHuE,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.11830bd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport axios from 'axios';\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%',\n    // display: 'flex',\n    // alignItems: 'right'\n};\n\nexport class MapContainer extends Component {\n    state = {\n        markerClicked: false,\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {}\n    };\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            markerClicked: true\n        })\n    };\n\n    onMouseoverMarker = (props, marker, e) => {\n        if (!this.state.showingInfoWindow) {\n            this.setState({\n                selectedPlace: props,\n                activeMarker: marker,\n                showingInfoWindow: true\n            })\n        }\n    };\n\n    onMouseoutMarker = props => {\n        if (!this.state.markerClicked) {\n            if (this.state.showingInfoWindow) {\n                this.setState({\n                    showingInfoWindow: false,\n                    activeMarker: null\n                });\n            }\n        }\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                markerClicked: false,\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    getDrivers() {\n        // Returns all available drivers\n        axios.get('https://68.183.98.140/api/display_drivers')\n            .then(function (response) {\n                // handle success\n                let driver_list = []\n                driver_list = response.data['drivers']\n                for (var n = 0; n < driver_list.length; n++) {\n                    this.renderAmbulance(driver_list[n])\n                }\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n    }\n\n    renderAmbulance(driver) {\n        let location = driver['location'].split(\",\")\n        let phone_number = driver['phone_number']\n        return (\n            <div>\n                <Marker\n                    onMouseover={this.onMouseoverMarker}\n                    onClick={this.onMarkerClick}\n                    onMouseout={this.onMouseoutMarker}\n                    name={phone_number}\n                    // icon={{\n                    //   url: './public/static/icon.svg'\n                    // }}\n                    position={{ lat: location[0], lng: location[1] }}\n                />\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}\n                >\n                    <div>\n                        <h4>{this.state.selectedPlace.name}</h4>\n                    </div>\n                </InfoWindow>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <Map\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                initialCenter={{\n                    lat: 0.135502,\n                    lng: 32.721040\n                }}\n            >\n                <div>\n                    {this.getDrivers()}\n                </div>\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDYXogTmMXbKU1OvVff0wo8wzAk83o7Fc0'\n})(MapContainer);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}